// Script 2: Choix des schemas et conditions initialesclearglobal("condI","scheme","L");// Parametres physiquesa = 0.1;   // vitesse dâ€™advectionTmax = 10; // temps maximumL = 5 ;    // longueur du domainecondI=1;   // flag pour le choix de la condition initiale           // =1 le creneau, =2 la sinusoidescheme=1;  // flag pour le choix du schema           // =1 explicite upwind, =2 Lax-Wendrofffunction [v] = condinit(x)       // condition initiale    select condI    case 1        v=bool2s((x>1.)&(x<1.5));     case 2        v=sin(8*%pi*x/L);        endendfunction// Parametres numeriquesN = 201;     // Nd points discretisation espacedx = L/(N-1);// pas d'espaces = 0.8;     // nombre de Courantdt = s*dx/a; // pas de temps // Initalisation maillage et donnee initialex=linspace(0,L,N); // partition equdisante avec N pointsu=condinit(x);     // solution initiale // On demarre la boucle en tempstps = dt:dt:Tmax;for j=1:length(tps)    uold = u;                    // on stocke la solution precedente    uexact=condinit(x-a*tps(j)); // solution exacte au temps t    select scheme    case 1        u(2:N)=uold(2:N)-s*(uold(2:N)-uold(1:N-1));     case 2        u(N)=uexact(N);        u(2:N-1)=uold(2:N-1)-s/2*(uold(3:N)-uold(1:N-2))+...                 s^2/2*(uold(3:N)-2*uold(2:N-1)+uold(1:N-2));    end    u(1)=u(N);                  // on utilise la periodicite pour calculer u(1)end// Sortie graphiqueclf()plot(x,u,'rx-',x,uexact,'bo-');legend('Solution approchee', 'Solution exacte');xtitle('Comparaison entre la solution exacte et approchee','x','Solution');