// Script 1: Schema explicite "upwind"// Premiere partieclear// Parametres physiquesa = 0.1;   // vitesse dâ€™advectionTmax = 10; // temps maximuL = 5 ;    // longueur du domainefunction [v] = condinit(x)    v=bool2s((x>1.)&(x<1.5)); // condition initialeendfunction// Parametres numeriquesN = 201;     // Nd points discretisation espacedx = L/(N-1);// pas d'espaces = 0.8;     // nombre de Courantdt = s*dx/a; // pas de temps // Initalisation maillage et donnee initialex=linspace(0,L,N); // partition equdisante avec N pointsu=condinit(x);     // solution initiale // On demarre la boucle en tempstps = dt:dt:Tmax;for j=1:length(tps)    uold = u;      // on stocke la solution precedente    u(2:N)=uold(2:N)-s*(uold(2:N)-uold(1:N-1)); // mise a jour de la solution    u(1)=u(N);     // on utilise la periodicite pour calculer u(1)endt=tps($);               // temps finaluexact=condinit(x-a*t); // solution exacte au temps final// Sortie graphiqueclf()plot(x,u,'rx-',x,uexact,'bo-');legend('Solution approchee', 'Solution exacte');xtitle('Comparaison entre la solution exacte et approchee','x','Solution');